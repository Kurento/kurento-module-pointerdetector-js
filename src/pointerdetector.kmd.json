{
  "name": "pointerdetector",
  "version": "6.7.1-dev",
  "kurentoVersion": "^6.7.0",
  "imports": [
    {
      "name": "core",
      "version": "^6.7.0",
      "mavenVersion": "[6.7.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.7.0 <7.0.0"
    },
    {
      "name": "elements",
      "version": "^6.7.0",
      "mavenVersion": "[6.7.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.7.0 <7.0.0"
    },
    {
      "name": "filters",
      "version": "^6.7.0",
      "mavenVersion": "[6.7.0,7.0.0-SNAPSHOT)",
      "npmVersion": ">=6.7.0 <7.0.0"
    }
  ],
  "code": {
    "api": {
      "js": {
        "nodeName": "kurento-module-pointerdetector",
        "npmDescription": "Pointer Detector Filter",
        "npmGit": "Kurento/kurento-module-pointerdetector-js",
        "npmVersion": "Kurento/kurento-module-pointerdetector-js"
      },
      "java": {
        "mavenGroupId": "org.kurento.module",
        "mavenArtifactId": "pointerdetector",
        "mavenVersion": "6.7.1-SNAPSHOT",
        "packageName": "org.kurento.module.pointerdetector"
      }
    },
    "implementation": {
      "cppNamespace": "kurento::module::pointerdetector",
      "lib": "libkmspointerdetector"
    }
  },
  "remoteClasses": [
    {
      "name": "PointerDetectorFilter",
      "doc": "This type of :rom:cls:`Filter` detects UI pointers in a video feed.",
      "extends": "Filter",
      "constructor": {
        "params": [
          {
            "name": "mediaPipeline",
            "doc": "the :rom:cls:`MediaPipeline` to which the filter belongs",
            "type": "MediaPipeline"
          },
          {
            "name": "calibrationRegion",
            "doc": "region to calibrate the filter",
            "type": "WindowParam"
          },
          {
            "name": "windows",
            "doc": "list of detection windows for the filter.",
            "type": "PointerDetectorWindowMediaParam[]",
            "optional": true,
            "defaultValue": []
          }
        ],
        "doc": "Builder for the :rom:cls:`PointerDetector`."
      },
      "methods": [
        {
          "params": [
            {
              "name": "window",
              "doc": "The window to be added",
              "type": "PointerDetectorWindowMediaParam"
            }
          ],
          "name": "addWindow",
          "doc": " Adds a new detection window for the filter to detect pointers entering or exiting the window"
        },
        {
          "params": [],
          "name": "clearWindows",
          "doc": "Removes all pointer detector windows"
        },
        {
          "params": [],
          "name": "trackColorFromCalibrationRegion",
          "doc": "This method allows to calibrate the tracking color.\n\nThe new tracking color will be the color of the object in the colorCalibrationRegion."
        },
        {
          "params": [
            {
              "name": "windowId",
              "doc": "the id of the window to be removed",
              "type": "String"
            }
          ],
          "name": "removeWindow",
          "doc": "Removes a window from the list to be monitored"
        }
      ],
      "events": [
        "WindowIn",
        "WindowOut"
      ]
    }
  ],
  "complexTypes": [
    {
      "typeFormat": "REGISTER",
      "properties": [
        {
          "name": "topRightCornerX",
          "doc": "X coordinate of the left upper point of the window",
          "type": "int"
        },
        {
          "name": "topRightCornerY",
          "doc": "Y coordinate of the left upper point of the window",
          "type": "int"
        },
        {
          "name": "width",
          "doc": "width in pixels of the window",
          "type": "int"
        },
        {
          "name": "height",
          "doc": "height in pixels of the window",
          "type": "int"
        }
      ],
      "name": "WindowParam",
      "doc": "Parameter representing a window in a video stream.\nIt is used in command and constructor for media elements.\n\nAll units are in pixels, X runs from left to right, Y from top to bottom."
    },
    {
      "typeFormat": "REGISTER",
      "properties": [
        {
          "name": "id",
          "doc": "id of the window for pointer detection",
          "type": "String"
        },
        {
          "name": "height",
          "doc": "height in pixels",
          "type": "int"
        },
        {
          "name": "width",
          "doc": "width in pixels",
          "type": "int"
        },
        {
          "name": "upperRightX",
          "doc": "X coordinate in pixels of the upper left corner",
          "type": "int"
        },
        {
          "name": "upperRightY",
          "doc": "Y coordinate in pixels of the upper left corner",
          "type": "int"
        },
        {
          "name": "activeImage",
          "doc": "uri of the image to be used when the pointer is inside the window",
          "type": "String",
          "optional": true
        },
        {
          "name": "imageTransparency",
          "doc": "transparency ratio of the image",
          "type": "float",
          "optional": true
        },
        {
          "name": "image",
          "doc": "uri of the image to be used for the window.\n\nIf :rom:attr:`activeImage` has been set, it will only be shown when the pointer is outside of the window.",
          "type": "String",
          "optional": true
        }
      ],
      "name": "PointerDetectorWindowMediaParam",
      "doc": "Data structure for UI Pointer detection in video streams.\n\nAll the coordinates are in pixels. X is horizontal, Y is vertical, running from the top of the window. Thus, 0,0 corresponds to the topleft corner."
    }
  ],
  "events": [
    {
      "properties": [
        {
          "name": "windowId",
          "doc": "Opaque String indicating the id of the window entered",
          "type": "String"
        }
      ],
      "extends": "Media",
      "name": "WindowOut",
      "doc": "Event generated when an object exits a window."
    },
    {
      "properties": [
        {
          "name": "windowId",
          "doc": "Opaque String indicating the id of the window entered",
          "type": "String"
        }
      ],
      "extends": "Media",
      "name": "WindowIn",
      "doc": "Event generated when an object enters a window."
    }
  ]
}
