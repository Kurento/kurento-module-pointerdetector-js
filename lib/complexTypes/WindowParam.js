/* Autogenerated with Kurento Idl */

/*
 * (C) Copyright 2013-2015 Kurento (http://kurento.org/)
 *
 * All rights reserved. This program and the accompanying materials are made
 * available under the terms of the GNU Lesser General Public License (LGPL)
 * version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

var inherits = require('inherits');

var kurentoClient = require('kurento-client');

var checkType = kurentoClient.checkType;
var ChecktypeError = checkType.ChecktypeError;

var ComplexType = kurentoClient.register.complexTypes.ComplexType;


/**
 * Parameter representing a window in a video stream.
 * It is used in command and constructor for media elements.
 * All units are in pixels, X runs from left to right, Y from top to bottom.
 *
 * @constructor module:pointerdetector/complexTypes.WindowParam
 *
 * @property {external:Integer} topRightCornerX
 *  X coordinate of the left upper point of the window
 * @property {external:Integer} topRightCornerY
 *  Y coordinate of the left upper point of the window
 * @property {external:Integer} width
 *  width in pixels of the window
 * @property {external:Integer} height
 *  height in pixels of the window
 */
function WindowParam(windowParamDict){
  if(!(this instanceof WindowParam))
    return new WindowParam(windowParamDict)

  // Check windowParamDict has the required fields
  checkType('int', 'windowParamDict.topRightCornerX', windowParamDict.topRightCornerX, {required: true});
  checkType('int', 'windowParamDict.topRightCornerY', windowParamDict.topRightCornerY, {required: true});
  checkType('int', 'windowParamDict.width', windowParamDict.width, {required: true});
  checkType('int', 'windowParamDict.height', windowParamDict.height, {required: true});

  // Init parent class
  WindowParam.super_.call(this, windowParamDict)

  // Set object properties
  Object.defineProperties(this, {
    topRightCornerX: {
      writable: true,
      enumerable: true,
      value: windowParamDict.topRightCornerX
    },
    topRightCornerY: {
      writable: true,
      enumerable: true,
      value: windowParamDict.topRightCornerY
    },
    width: {
      writable: true,
      enumerable: true,
      value: windowParamDict.width
    },
    height: {
      writable: true,
      enumerable: true,
      value: windowParamDict.height
    }
  })
}
inherits(WindowParam, ComplexType)

// Private identifiers to allow re-construction of the complexType on the server
// They need to be enumerable so JSON.stringify() can access to them
Object.defineProperties(WindowParam.prototype, {
  __module__: {
    enumerable: true,
    value: "pointerdetector"
  },
  __type__: {
    enumerable: true,
    value: "WindowParam"
  }
})

/**
 * Checker for {@link pointerdetector/complexTypes.WindowParam}
 *
 * @memberof module:pointerdetector/complexTypes
 *
 * @param {external:String} key
 * @param {module:pointerdetector/complexTypes.WindowParam} value
 */
function checkWindowParam(key, value)
{
  if(!(value instanceof WindowParam))
    throw ChecktypeError(key, WindowParam, value);
};


module.exports = WindowParam;

WindowParam.check = checkWindowParam;
